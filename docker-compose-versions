#!/usr/bin/sh

set -e
set -u

USERAGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36"


print_usage() {
	echo "USAGE: docker-compose-version [n]"
	echo
	echo "Prints out the currently stable Docker Compose versions in descending order (latest first)."
	echo "If used with a numerical argument, you can get the latest (1) or second latest (2)."
	echo
	echo "Arguments"
	echo "    1        Print only latest version"
	echo "    2        Print only second latest version"
	echo "    3        Print only third latest version"
	echo "    n        Print only x-th latest version"
}

if [ "${#}" -eq "1" ]; then
	if [ "${1}" = "-h" ] || [ "${1}" = "--version" ]; then
		print_usage
		exit 0
	fi
	if ! echo "${1}" | grep -qE '^[0-9]+$'; then
		>&2 echo "Error, supplied argument must be an integer."
		exit 1
	fi
fi

if ! command -v curl >/dev/null 2>&1; then
	>&2 echo "Error, 'curl' binary is required but not found in path."
	exit 1
fi

i=0; max=1000;
while [ $i -lt $max ]; do

	while [ $i -lt $max ]; do
		if RELEASES="$( curl -sS -H "User-Agent: ${USERAGENT}" https://raw.githubusercontent.com/docker/compose/master/CHANGELOG.md )"; then
			break;
		else
			>&2 echo "[Fail] Unable to fetch releases. Trying again."
			sleep 1
		fi
	done
	if VERSIONS="$( echo "${RELEASES}" | grep -E '[.0-9]+\s+\([0-9\-]+\)' )"; then
		VERSIONS="$( echo "${VERSIONS}" | awk '{print $1}' )"
		break
	else
		>&2 echo "[Fail] Unable to parse versions. Trying again."
		>&2 echo "${RELEASES}"
	fi

	i=$((i+1))
	sleep 1

done

if [ "${#}" -eq "1" ]; then
	echo "${VERSIONS}" | head -${1} | tail -1
else
	echo "${VERSIONS}"
fi
